[{"C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\index.js":"1","C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\App.js":"2","C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\routes.js":"3","C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\components\\Header\\index.js":"4","C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\pages\\Main\\index.js":"5","C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\pages\\Task\\index.js":"6","C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\components\\card.js":"7","C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\components\\FormGroup.js":"8","C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\app\\service\\taskService.js":"9","C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\components\\toastr.js":"10","C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\app\\apiservices.js":"11","C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\app\\exception\\ErroValidacao.js":"12","C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\pages\\BuscarTarefas\\index.js":"13","C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\components\\selectMenu.js":"14"},{"size":201,"mtime":1611672216694,"results":"15","hashOfConfig":"16"},{"size":494,"mtime":1611864715036,"results":"17","hashOfConfig":"16"},{"size":495,"mtime":1611862179657,"results":"18","hashOfConfig":"16"},{"size":153,"mtime":1611673719493,"results":"19","hashOfConfig":"16"},{"size":1218,"mtime":1611766077364,"results":"20","hashOfConfig":"16"},{"size":3914,"mtime":1611866435644,"results":"21","hashOfConfig":"16"},{"size":388,"mtime":1611686849968,"results":"22","hashOfConfig":"16"},{"size":258,"mtime":1611686888095,"results":"23","hashOfConfig":"16"},{"size":1254,"mtime":1611862845335,"results":"24","hashOfConfig":"16"},{"size":873,"mtime":1611688753356,"results":"25","hashOfConfig":"16"},{"size":711,"mtime":1611766077347,"results":"26","hashOfConfig":"16"},{"size":103,"mtime":1611688443129,"results":"27","hashOfConfig":"16"},{"size":6201,"mtime":1611867359869,"results":"28","hashOfConfig":"16"},{"size":332,"mtime":1611860920556,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1tctmmr",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},"C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\index.js",[],["63","64"],"C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\App.js",[],"C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\routes.js",["65"],"import React from 'react';\r\n\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport Main from './pages/Main';\r\nimport Task from './pages/Task';\r\nimport Home from './pages/BuscarTarefas';\r\n\r\nconst Routes = () =>(\r\n    <BrowserRouter>\r\n    <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        {/* <Route exact path=\"/\" component={Main} /> */}\r\n        <Route path=\"/task\" component={Task} />\r\n\r\n    </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;","C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\components\\Header\\index.js",[],"C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\pages\\Main\\index.js",[],"C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\pages\\Task\\index.js",[],"C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\components\\card.js",[],"C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\components\\FormGroup.js",[],"C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\app\\service\\taskService.js",[],"C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\components\\toastr.js",[],"C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\app\\apiservices.js",[],"C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\app\\exception\\ErroValidacao.js",[],["66","67"],"C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\pages\\BuscarTarefas\\index.js",["68"],"import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport Card from '../../components/card'\r\nimport FormGroup from '../../components/FormGroup'\r\nimport SelectMenu from '../../components/selectMenu'\r\n\r\nimport taskService from '../../app/service/taskService';\r\n\r\n\r\nimport * as messages from '../../components/toastr'\r\n\r\nimport {Dialog} from 'primereact/dialog';\r\nimport {Button} from 'primereact/button';\r\n\r\n\r\n\r\nclass Home extends React.Component {\r\n\r\n    state = {\r\n        tasks: [],\r\n        tipo: '',\r\n        showConfirmDialog: false,\r\n    }\r\n\r\n    constructor(){\r\n        super();\r\n        this.service = new taskService();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.loadTasks();\r\n    }\r\n\r\n    loadTasks = async () => {\r\n        const response = await this.service.listar();\r\n\r\n        this.setState({tasks: response.data});\r\n    };\r\n\r\n    NovaTarefa = () => {\r\n        this.props.history.push('/task')\r\n    }\r\n\r\n    render(){\r\n        const {tasks} =  this.state;\r\n        const tipos = this.service.obterListaStatus();\r\n\r\n        const confirmDialogFooter = (\r\n            <div>\r\n                <Button label=\"Confirmar\" icon=\"pi pi-check\" onClick={this.deletar} />\r\n                <Button label=\"Cancelar\" icon=\"pi pi-times\" onClick={this.cancelarDelecao} \r\n                        className=\"p-button-secondary\" />\r\n            </div>\r\n        );\r\n\r\n        return(\r\n\r\n            <div className=\"post-list\">\r\n\r\n            \r\n            <Card title=\"Tarefas\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"bs-component\">\r\n\r\n                            {/* <FormGroup htmlFor=\"inputDesc\" label=\"Descrição: \">\r\n                                <input type=\"text\" \r\n                                       className=\"form-control\" \r\n                                       id=\"inputDesc\" \r\n                                       value={this.state.descricao}\r\n                                       onChange={e => this.setState({descricao: e.target.value})}\r\n                                       placeholder=\"Digite a descrição\" />\r\n                            </FormGroup> */}\r\n\r\n                            <FormGroup htmlFor=\"inputTipo\" label=\"Status\">\r\n                                <SelectMenu id=\"inputTipo\" \r\n                                            value={this.state.tipo}\r\n                                            onChange={e => this.setState({ tipo: e.target.value })}\r\n                                            className=\"form-control\" \r\n                                            lista={tipos}\r\n                                             />\r\n                            </FormGroup> \r\n\r\n                            <button onClick={this.buscar} \r\n                                    type=\"button\" \r\n                                    className=\"btn btn-success\">\r\n                                    <i className=\"pi pi-search\"></i> Buscar\r\n                            </button>\r\n                            <button onClick={this.NovaTarefa} \r\n                                    type=\"button\" \r\n                                    className=\"btn btn-danger\">\r\n                                    <i className=\"pi pi-plus\"></i> Cadastrar\r\n                            </button>\r\n\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>   \r\n\r\n                <br/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"bs-component\">\r\n                        {tasks.map(tasks => (\r\n                            <article key={tasks.id}>\r\n                            <strong>{tasks.titulo}</strong>\r\n                            <p>{tasks.descricao}</p>\r\n                            <p>{tasks.status}</p>\r\n                            \r\n                            <button className=\"btn btn-success\" title=\"Concluir\"\r\n                               // disabled={ lancamento.status !== 'PENDENTE' }\r\n                                //onClick={e => props.alterarStatus(lancamento, 'EFETIVADO')} \r\n                                type=\"button\">\r\n                                <i className=\"pi pi-check\"></i>\r\n                            </button>\r\n\r\n                             <button className=\"btn btn-warning\"  title=\"Cancelar\"\r\n                               // disabled={ lancamento.status !== 'PENDENTE' }\r\n                              //  onClick={e => props.alterarStatus(lancamento, 'CANCELADO')} \r\n                                type=\"button\">\r\n                                <i className=\"pi pi-times\"></i>\r\n                             </button>\r\n\r\n                            <button type=\"button\"   title=\"Editar\"\r\n                            className=\"btn btn-primary\"\r\n                            //onClick={e => props.editAction(tasks.id)}\r\n                            >\r\n                            <i className=\"pi pi-pencil\"></i>\r\n                             </button>\r\n\r\n                            <button type=\"button\"  title=\"Excluir\"\r\n                            className=\"btn btn-danger\" \r\n                           // onClick={ e => props.deleteAction(tasks.id)}\r\n                            >\r\n                            <i className=\"pi pi-trash\"></i>\r\n                            </button>\r\n                         \r\n                    </article>\r\n                ))}\r\n                        </div>\r\n                    </div>  \r\n                </div> \r\n                <div>\r\n                    <Dialog header=\"Confirmação\" \r\n                            visible={this.state.showConfirmDialog} \r\n                            style={{width: '50vw'}}\r\n                            footer={confirmDialogFooter} \r\n                            modal={true} \r\n                            onHide={() => this.setState({showConfirmDialog: false})}>\r\n                        Confirma a exclusão deste Lançamento?\r\n                    </Dialog>\r\n                </div>      \r\n               \r\n            </Card>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default withRouter(Home);","C:\\Users\\jefferson.coelho\\Desktop\\tasks-web-application\\src\\components\\selectMenu.js",["69"],"import React from 'react'\r\n\r\nexport default (props) => {\r\n\r\n    const options = props.lista.map( (option, index)  => {\r\n        return (\r\n            <option key={index} value={option.value}>{option.label}</option>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <select {...props}  >\r\n            {options}\r\n        </select>\r\n    )\r\n}",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":5,"column":8,"nodeType":"76","messageId":"77","endLine":5,"endColumn":12},{"ruleId":"70","replacedBy":"78"},{"ruleId":"72","replacedBy":"79"},{"ruleId":"74","severity":1,"message":"80","line":11,"column":13,"nodeType":"76","messageId":"77","endLine":11,"endColumn":21},{"ruleId":"81","severity":1,"message":"82","line":3,"column":1,"nodeType":"83","endLine":16,"endColumn":2},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'Main' is defined but never used.","Identifier","unusedVar",["84"],["85"],"'messages' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]